/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ASUS
 */
public class PenumpangView extends javax.swing.JFrame {
    
    // Variabel koneksi
    private Connection conn;
    
    // Model untuk tabel
    private DefaultTableModel tableModel;
    
    // Untuk menyimpan baris yang dipilih di JTable
    private int selectedRow = -1;

    /**
     * Creates new form PenumpangView
     */
    public PenumpangView() {
        initComponents();
        
        connectToDatabase();     
        initTableModel();        
        loadDataToTable();       
        addTableClickListener();
        
        
        


        
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNomorRegistrasi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNamaPenumpang = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAlamat = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNoTelp = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnUlang = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKembali = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPenumpang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("FORM PENUMPANG");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(278, 278, 278))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nomor Registrasi");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nama Penumpang");

        txtAlamat.setColumns(20);
        txtAlamat.setRows(5);
        jScrollPane1.setViewportView(txtAlamat);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Alamat");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("No Telepon");

        btnSimpan.setBackground(new java.awt.Color(51, 255, 0));
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(255, 255, 51));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnUlang.setBackground(new java.awt.Color(204, 204, 204));
        btnUlang.setText("Ulang");
        btnUlang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUlangActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 51, 51));
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnKembali.setText("Kembali ke Menu Utama");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        tblPenumpang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "Nomor Registrasi", "Nama Penumpang", "Alamat", "No Telepon"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPenumpang);
        if (tblPenumpang.getColumnModel().getColumnCount() > 0) {
            tblPenumpang.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addGap(74, 74, 74)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUlang)
                        .addGap(72, 72, 72)
                        .addComponent(btnHapus))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNomorRegistrasi, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNamaPenumpang)
                            .addComponent(txtNoTelp)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnKembali, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNomorRegistrasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNamaPenumpang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnEdit)
                    .addComponent(btnUlang)
                    .addComponent(btnHapus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnKembali)
                .addGap(47, 47, 47)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
         simpanDataPenumpang();
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
       editDataPenumpang();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnUlangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUlangActionPerformed
        resetForm();
    }//GEN-LAST:event_btnUlangActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
         hapusDataPenumpang();
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        PenjualanTiketView mainForm = new PenjualanTiketView();
        
        // Make the main form visible
        mainForm.setVisible(true);
        
        // Close the current form
        this.dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PenumpangView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PenumpangView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PenumpangView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PenumpangView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PenumpangView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUlang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblPenumpang;
    private javax.swing.JTextArea txtAlamat;
    private javax.swing.JTextField txtNamaPenumpang;
    private javax.swing.JTextField txtNoTelp;
    private javax.swing.JTextField txtNomorRegistrasi;
    // End of variables declaration//GEN-END:variables
 //Koneksi ke Database
    private void connectToDatabase() {
        try {
            // Sesuaikan port, user, pass dengan environment Anda
            conn = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/penjualan_tiket_pesawat", 
                    "root", 
                    "");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, 
                    "Koneksi ke database gagal: " + ex.getMessage());
        }
    }
    
    //Inisialisasi Model Tabel
    private void initTableModel() {
        tableModel = (DefaultTableModel) tblPenumpang.getModel();
        tableModel.setRowCount(0); // Kosongkan data awal
    }

    //Memuat Data ke Tabel
    private void loadDataToTable() {
        if (conn == null) {
            JOptionPane.showMessageDialog(this, 
                    "Koneksi database belum diinisialisasi!");
            return;
        }
        
        // Kosongkan tabel sebelum memuat ulang
        tableModel.setRowCount(0);

        String sql = "SELECT * FROM penumpang ORDER BY id DESC";
        try (PreparedStatement pst = conn.prepareStatement(sql);
             ResultSet rs = pst.executeQuery()) {

            while (rs.next()) {
                Object[] dataRow = {
                    rs.getInt("id"),
                    rs.getString("nomor_registrasi"),
                    rs.getString("nama_penumpang"),
                    rs.getString("alamat"),
                    rs.getString("no_telp")
                };
                tableModel.addRow(dataRow);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, 
                    "Error load data: " + ex.getMessage());
        }
    }
    
      //Menambahkan Data ke Database
    private void simpanDataPenumpang() {
        // Validasi input
        String nomorReg = txtNomorRegistrasi.getText().trim();
        String nama = txtNamaPenumpang.getText().trim();
        String alamat = txtAlamat.getText().trim();
        String noTelp = txtNoTelp.getText().trim();

        if (nomorReg.isEmpty() || nama.isEmpty() || alamat.isEmpty() || noTelp.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                    "Semua field wajib diisi!", 
                    "Input Kosong", 
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        //Query Insert
        String sql = "INSERT INTO penumpang "
                   + "(nomor_registrasi, nama_penumpang, alamat, no_telp) "
                   + "VALUES (?,?,?,?)";

        try (PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setString(1, nomorReg);
            pst.setString(2, nama);
            pst.setString(3, alamat);
            pst.setString(4, noTelp);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, 
                    "Data berhasil disimpan!");
            // Reload data
            loadDataToTable();
            resetForm();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, 
                    "Error saat menyimpan data: " + ex.getMessage());
        }
    }
    
    //Mengedit Data di Database
    private void editDataPenumpang() {
        // Pastikan ada baris yang dipilih
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, 
                    "Pilih data yang akan diedit dari tabel!");
            return;
        }

        int id = (int) tblPenumpang.getValueAt(selectedRow, 0);
        String nomorReg = txtNomorRegistrasi.getText().trim();
        String nama = txtNamaPenumpang.getText().trim();
        String alamat = txtAlamat.getText().trim();
        String noTelp = txtNoTelp.getText().trim();

        if (nomorReg.isEmpty() || nama.isEmpty() || alamat.isEmpty() || noTelp.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                    "Semua field wajib diisi!", 
                    "Input Kosong", 
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String sql = "UPDATE penumpang SET "
                   + "nomor_registrasi = ?, "
                   + "nama_penumpang = ?, "
                   + "alamat = ?, "
                   + "no_telp = ? "
                   + "WHERE id = ?";

        try (PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setString(1, nomorReg);
            pst.setString(2, nama);
            pst.setString(3, alamat);
            pst.setString(4, noTelp);
            pst.setInt(5, id);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, 
                    "Data berhasil diperbarui!");
            loadDataToTable();
            resetForm();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, 
                    "Error saat mengupdate data: " + ex.getMessage());
        }
    }

     //Menghapus Data di Database
    private void hapusDataPenumpang() {
        
        int row = tblPenumpang.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, 
                    "Pilih data yang akan dihapus dari tabel!");
            return;
        }

        int id = (int) tblPenumpang.getValueAt(row, 0);
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Yakin ingin menghapus data dengan ID: " + id + "?", 
                "Konfirmasi Hapus", 
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            String sql = "DELETE FROM penumpang WHERE id = ?";
            try (PreparedStatement pst = conn.prepareStatement(sql)) {
                pst.setInt(1, id);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, 
                        "Data berhasil dihapus!");
                loadDataToTable();
                resetForm();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, 
                        "Error saat menghapus data: " + ex.getMessage());
            }
        }
    }
    
    //Reset/Kosongkan Input Form
    private void resetForm() {
        txtNomorRegistrasi.setText("");
        txtNamaPenumpang.setText("");
        txtAlamat.setText("");
        txtNoTelp.setText("");

        // Reset juga selectedRow
        selectedRow = -1;
        // Menghilangkan seleksi di tabel
        tblPenumpang.clearSelection();
    }
    
    //Klik Baris Tabel => Tampilkan Data ke Input Field
    private void addTableClickListener() {
        tblPenumpang.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = tblPenumpang.getSelectedRow();
                if (row != -1) {
                    selectedRow = row; // Simpan baris yang dipilih
                    tampilkanDataKeField(row);
                }
            }
        });
    }

    private void tampilkanDataKeField(int row) {
        // Ambil data dari JTable
        txtNomorRegistrasi.setText(tblPenumpang.getValueAt(row, 1).toString());
        txtNamaPenumpang.setText(tblPenumpang.getValueAt(row, 2).toString());
        txtAlamat.setText(tblPenumpang.getValueAt(row, 3).toString());
        txtNoTelp.setText(tblPenumpang.getValueAt(row, 4).toString());
    }
    




}
